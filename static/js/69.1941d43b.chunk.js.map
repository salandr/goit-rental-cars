{"version":3,"file":"static/js/69.1941d43b.chunk.js","mappings":"iRAkEA,UA/CoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAeC,EAAAA,EAAAA,QAAO,MAEtBC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRrB,GAASsB,EAAAA,EAAAA,GAAWhB,GACtB,GAAG,CAACN,EAAUM,KAEde,EAAAA,EAAAA,YAAU,WACJP,EAAQS,OAAS,GAAKT,EAAQS,OAAS,IAAM,GAC/CZ,GAAgB,GACZG,EAAQS,OAAS,GACnBC,EAAAA,GAAAA,QAAc,kCAGhBb,GAAgB,EAEpB,GAAG,CAACG,IAOJ,OACEW,EAAAA,EAAAA,MAACC,EAAAA,GAAoB,CAAAC,SAAA,EACnBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPJ,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACC,IAAKnB,EAAcoB,GAAG,oBAAmBL,SAAA,EAChDC,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACnB,QAASA,IACpBJ,IACCkB,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAACC,KAAK,SAASC,QAXZ,WACrB7B,GAAQ,SAAA8B,GAAQ,OAAIA,EAAW,CAAC,KAChCC,EAAAA,EAAAA,IAAa1B,EAAa2B,QAC5B,EAQ2DZ,SAAC,cAIrDV,IAAaW,EAAAA,EAAAA,KAACY,EAAAA,EAAM,IACpBrB,IAASM,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQR,UAI7B,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { getAdverts } from '../redux/adverts/operations';\nimport AdvertList from 'components/AdvertCatalog/AdvertList';\nimport {\n  CatalogPageContainer,\n  Wrapper,\n} from 'components/Container/Container.styled';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { LoadMoreBtn } from 'components/Button/Button.styled';\nimport { handleScroll } from '../services';\nimport {\n  selectAdverts,\n  selectAdvertsError,\n  selectAdvertsLoading,\n} from '../redux/adverts/selectors';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [showLoadMore, setShowLoadMore] = useState(true);\n  const containerRef = useRef(null);\n\n  const adverts = useSelector(selectAdverts);\n  const isLoading = useSelector(selectAdvertsLoading);\n  const error = useSelector(selectAdvertsError);\n\n  useEffect(() => {\n    dispatch(getAdverts(page));\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    if (adverts.length < 4 || adverts.length % 4 !== 0) {\n      setShowLoadMore(false);\n      if (adverts.length > 0) {\n        toast.success(\"You've reached the last page!\");\n      }\n    } else {\n      setShowLoadMore(true);\n    }\n  }, [adverts]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n    handleScroll(containerRef.current);\n  };\n\n  return (\n    <CatalogPageContainer>\n      <Filter />\n      <Wrapper ref={containerRef} id=\"scroll-to-element\">\n        <AdvertList adverts={adverts} />\n        {showLoadMore && (\n          <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n            Load more\n          </LoadMoreBtn>\n        )}\n        {isLoading && <Loader />}\n        {error && <p>Error: {error}</p>}\n      </Wrapper>\n    </CatalogPageContainer>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","showLoadMore","setShowLoadMore","containerRef","useRef","adverts","useSelector","selectAdverts","isLoading","selectAdvertsLoading","error","selectAdvertsError","useEffect","getAdverts","length","toast","_jsxs","CatalogPageContainer","children","_jsx","Filter","Wrapper","ref","id","AdvertList","LoadMoreBtn","type","onClick","prevPage","handleScroll","current","Loader"],"sourceRoot":""}